[{"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/index.tsx":"1","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/reportWebVitals.ts":"2","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/App.tsx":"3","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/store.tsx":"4","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/dialogReducer.ts":"5","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/profileReducer.ts":"6","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Header/header.tsx":"7","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/navbar/Navbar.tsx":"8","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/profile.tsx":"9","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/Dialogs.tsx":"10","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/MyPosts/MyPosts.tsx":"11","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx":"12","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/Message/Message.tsx":"13","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/MyPosts/Post/Post.tsx":"14","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/redaxStore.ts":"15"},{"size":680,"mtime":1613652044186,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1612174844882,"results":"18","hashOfConfig":"17"},{"size":1092,"mtime":1613651821048,"results":"19","hashOfConfig":"17"},{"size":2121,"mtime":1613652022593,"results":"20","hashOfConfig":"17"},{"size":1414,"mtime":1613396909793,"results":"21","hashOfConfig":"17"},{"size":1350,"mtime":1613649449353,"results":"22","hashOfConfig":"17"},{"size":305,"mtime":1612174844876,"results":"23","hashOfConfig":"17"},{"size":717,"mtime":1612174844879,"results":"24","hashOfConfig":"17"},{"size":814,"mtime":1612174844879,"results":"25","hashOfConfig":"17"},{"size":1549,"mtime":1612174844875,"results":"26","hashOfConfig":"17"},{"size":1450,"mtime":1612174844877,"results":"27","hashOfConfig":"17"},{"size":307,"mtime":1612174844874,"results":"28","hashOfConfig":"17"},{"size":239,"mtime":1612174844875,"results":"29","hashOfConfig":"17"},{"size":501,"mtime":1612174844878,"results":"30","hashOfConfig":"17"},{"size":341,"mtime":1612174844873,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zozfoj",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/index.tsx",[],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/reportWebVitals.ts",[],["71","72"],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/App.tsx",["73","74"],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/store.tsx",["75"],"import { type } from \"os\"\nimport dialogReducer from \"./dialogReducer\"\nimport profileReducer from \"./profileReducer\"\nimport {ActionsProfilePageType} from './profileReducer';\nimport {ActionsDialogsPageType} from './dialogReducer';\n\ntype MessageType = {\n    id: number\n    message: string\n}\ntype DialogType = {\n    id: number\n    name: string\n}\nexport type PostType = {\n    id: number\n    message: string\n    likeCounts: number\n}\nexport type ProfilePageType = {\n    posts: Array<PostType>\n    NewPostText: string\n}\nexport type DialogPageType = {\n    newMessageBody:string\n    dialogs: Array<DialogType>\n    messages: Array<MessageType>\n}\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    dialogsPage: DialogPageType\n  \n}\n\nexport type StoreType = {\n    _state: RootStateType\n    _callSubscriber: () => void\n    getState: () => RootStateType\n    subscribe: (observer: () => void) => void\n    dispatch: (action: ActionsTypes) => void\n}\nexport type ActionsTypes= ActionsProfilePageType | ActionsDialogsPageType\n\nconst store: StoreType = {\n    _state: {\n        profilePage: {   \n            NewPostText: 'it-kamasutra.com',\n            posts: [{ id: 1, message: \"Hi,how are you?\", likeCounts: 44 },\n            { id: 1, message: \"It my first post\", likeCounts: 344 }],\n\n        },\n        dialogsPage: {\n            newMessageBody:\"\",\n            dialogs: [{ id: 1, name: \"Anna\" },\n            { id: 2, name: \"Anna\" },\n            { id: 3, name: \"Vlad\" },\n            { id: 4, name: \"Lena\" },\n            { id: 5, name: \"Pasha\" }],\n            messages: [{ id: 1, message: \"Hello\" },\n            { id: 2, message: \"How are you?\" },\n            { id: 3, message: \"YOooo!!!\" }]\n        },\n        \n    },\n    getState() {\n        return this._state;\n    },\n    _callSubscriber() {\n        console.log(\"state changed\");\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        this._state.profilePage=profileReducer(this._state.profilePage,action);\n        this._state.dialogsPage=dialogReducer(this._state.dialogsPage,action);\n}\n}\n\n\n\nexport default store;\n\n","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/dialogReducer.ts",["76"],"import { DialogPageType} from \"./store\";\nlet initialState={\n    newMessageBody:\"\",\n    dialogs: [{ id: 1, name: \"Anna\" },\n    { id: 2, name: \"Anna\" },\n    { id: 3, name: \"Vlad\" },\n    { id: 4, name: \"Lena\" },\n    { id: 5, name: \"Pasha\" }],\n    messages: [{ id: 1, message: \"Hello\" },\n    { id: 2, message: \"How are you?\" },\n    { id: 3, message: \"YOooo!!!\" }]\n}\nexport type  updateNewMessageBodyACType={\n    type:string\n    body:string\n}\nexport const updateNewMessageBodyAC = (body: string): updateNewMessageBodyACType => {\n    return {\n        type: 'UPDATE-NEW-MESSAGE-BODY',\n        body: body\n    } as const\n}\nexport const sendMessageAC = (newMessage: string): any => {\n    return {\n        type: 'SEND-MESSAGE',\n        newMessage: newMessage\n    } as const\n}\nexport type ActionsDialogsPageType = ReturnType<typeof updateNewMessageBodyAC> | ReturnType<typeof sendMessageAC>\nexport const dialogReducer = (state: DialogPageType=initialState, action: ActionsDialogsPageType):DialogPageType => {\n    switch (action.type) {\n        case \"UPDATE-NEW-MESSAGE-BODY\":\n            state.newMessageBody = action.body;\n            return state;\n        case \"SEND-MESSAGE\":\n            let body = state.newMessageBody = '';\n            state.messages.push({ id: new Date().getTime(), message: action.newMessage });\n            return state;\n        default:\n            return state;\n    }\n}\nexport default dialogReducer;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/profileReducer.ts",[],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Header/header.tsx",["77"],"import React from 'react';\nimport classes from './header.module.css';\nfunction Header(){\n   return (<header className={classes.header}>\n       <img src=\"https://static7.depositphotos.com/1314241/789/i/950/depositphotos_7890698-stock-photo-ferocious-lion.jpg\"></img>\n   </header>);\n}\nexport default Header;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/navbar/Navbar.tsx",["78","79","80"],"import classes from './navbar.module.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Navbar(props:any){\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to='/profile' activeClassName={classes.activeLink}>Profile</NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to='/dialogs' activeClassName={classes.activeLink} >Messages</NavLink>\n      </div>\n      <div className={classes.item}>\n        <a>News</a>\n      </div>\n      <div className={classes.item}>\n        <a>Music</a>\n      </div>\n      <div className={classes.item}>\n        <a>Settings</a>\n      </div>\n    </nav>\n  );\n}\nexport default Navbar;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/profile.tsx",["81","82","83","84"],"import React from 'react';\nimport store, { PostType, ProfilePageType, StoreType} from '../../Redax/store';\nimport {ActionsProfilePageType} from './../../Redax/profileReducer'\nimport MyPosts from './MyPosts/MyPosts';\nimport classes from './profile.module.css';\ntype ProfilePropsType={\n    profilePage:ProfilePageType\n    dispatch:(action:ActionsProfilePageType)=>void\n}\nfunction Profile(props: ProfilePropsType){\n    \n    return(\n        <div className={classes.content}>\n            <div><img src=\"https://handcraftguide.com/sites/default/files/styles/original___water/public/sketchingforkids1handcraftguide.com__0.jpg?itok=CiUYaUmE\"></img></div>\n            <div>ava+description</div>\n            <MyPosts profilePage={props.profilePage} dispatch={props.dispatch}/>\n        </div>\n    );\n}\nexport default Profile;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/Dialogs.tsx",[],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/MyPosts/MyPosts.tsx",["85","86","87"],"import { type } from 'os';\nimport React, { ChangeEvent } from 'react';\nimport { isPropertySignature } from 'typescript';\nimport { StoreType, ProfilePageType} from '../../../Redax/store';\nimport {addPostAC, changeNewTextAC,ActionsProfilePageType } from './../../../Redax/profileReducer'\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\n\ntype ProfilePagePropsType = {\n    profilePage: ProfilePageType,\n    dispatch: (action: ActionsProfilePageType) => void\n}\nfunction MyPosts(props: ProfilePagePropsType) {\n\n    let postsElements = props.profilePage.posts.map(m => <Post key={m.id} message={m.message} likeCounts={m.likeCounts} />)\n\n    const addPost = () => {\n        //props.addPostCallBack(props.profilePage.NewPostText);\n        props.dispatch(addPostAC(props.profilePage.NewPostText));\n    } \n\n    const newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.dispatch(changeNewTextAC(e.currentTarget.value));\n    }\n\n    return (\n        <div>\n            <div>\n                My posts\n            <div>New post</div>\n            </div>\n            <div>\n                <textarea value={props.profilePage.NewPostText} onChange={newTextChangeHandler} />   \n                <button onClick={addPost} >Add post</button> {/*callback */}\n            </div>\n            <div className={classes.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n}\nexport default MyPosts;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/DialogItem/DialogItem.tsx",[],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Dialogs/Message/Message.tsx",[],"/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/components/Profile/MyPosts/Post/Post.tsx",["88"],"import React from 'react';\nimport classes from './Post.module.css';\ntype PostPropsTypes = {\n    message: string\n    likeCounts:number\n}\nfunction Post(props:PostPropsTypes) {\n    return (\n        <div className={classes.item}>\n            <img src=\"http://www.youloveit.ru/uploads/posts/2019-08/1565284946_red4.jpg\"></img>\n           {props.message}\n            post 1\n            <div>\n                <span>Like{props.likeCounts}</span>\n            </div>\n        </div>\n    );\n}\nexport default Post;","/Users/maksymleontiev/anna/CoursesITKamasutra/ReactSocialNetwork/src/Redax/redaxStore.ts",["89"],"import { combineReducers, createStore } from \"redux\";\nimport profileReducer from './profileReducer';\nimport dialogReducer from './dialogReducer';\nimport { ActionsTypes } from \"./store\";\n\nlet reducers= combineReducers({\n    profilePage:profileReducer,\n    dialogPage:dialogReducer\n});\n\nlet store = createStore(reducers);\nexport default store;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":9,"column":11,"nodeType":"96","messageId":"97","endLine":9,"endColumn":20},{"ruleId":"94","severity":1,"message":"99","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":14},{"ruleId":"94","severity":1,"message":"100","line":36,"column":17,"nodeType":"96","messageId":"97","endLine":36,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":5,"column":8,"nodeType":"103","endLine":5,"endColumn":124},{"ruleId":"104","severity":1,"message":"105","line":15,"column":9,"nodeType":"103","endLine":15,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":18,"column":9,"nodeType":"103","endLine":18,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":21,"column":9,"nodeType":"103","endLine":21,"endColumn":12},{"ruleId":"94","severity":1,"message":"106","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"107","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":2,"column":44,"nodeType":"96","messageId":"97","endLine":2,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":14,"column":18,"nodeType":"103","endLine":14,"endColumn":164},{"ruleId":"94","severity":1,"message":"99","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":14},{"ruleId":"94","severity":1,"message":"108","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"98","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":10,"column":13,"nodeType":"103","endLine":10,"endColumn":90},{"ruleId":"94","severity":1,"message":"109","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'StoreType' is defined but never used.","'type' is defined but never used.","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'store' is defined but never used.","'PostType' is defined but never used.","'isPropertySignature' is defined but never used.","'ActionsTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]